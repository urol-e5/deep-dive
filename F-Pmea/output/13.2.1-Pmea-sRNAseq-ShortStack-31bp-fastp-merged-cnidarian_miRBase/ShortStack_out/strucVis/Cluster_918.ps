%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Feb 16 15:39:55 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments
% maple legend and information
0 0 1 setrgbcolor
72 720 4 0 360 arc closepath fill stroke
0 0.5 1 setrgbcolor
72 710 4 0 360 arc closepath fill stroke
0 1 1 setrgbcolor
72 700 4 0 360 arc closepath fill stroke
0.5 1 0.5 setrgbcolor
72 690 4 0 360 arc closepath fill stroke
1 1 0 setrgbcolor
72 680 4 0 360 arc closepath fill stroke
1 0.5 0 setrgbcolor
72 670 4 0 360 arc closepath fill stroke
1 0 0 setrgbcolor
72 660 4 0 360 arc closepath fill stroke
1 0 0.5 setrgbcolor
72 650 4 0 360 arc closepath fill stroke
1 0 1 setrgbcolor
72 640 4 0 360 arc closepath fill stroke

0 0 0 setrgbcolor
/Helvetica findfont
8 scalefont
setfont
80 718 moveto
(10) show
/Helvetica findfont
4 scalefont
setfont
90 722 moveto
(0) show

/Helvetica findfont
8 scalefont
setfont
80 698 moveto
(10) show
/Helvetica findfont
4 scalefont
setfont
90 702 moveto
(1) show

/Helvetica findfont
8 scalefont
setfont
80 678 moveto
(10) show
/Helvetica findfont
4 scalefont
setfont
90 682 moveto
(2) show

/Helvetica findfont
8 scalefont
setfont
80 658 moveto
(10) show
/Helvetica findfont
4 scalefont
setfont
90 662 moveto
(3) show

/Helvetica findfont
8 scalefont
setfont
80 638 moveto
(>=10) show
/Helvetica findfont
4 scalefont
setfont
99 642 moveto
(4) show

/Helvetica findfont
8 scalefont
setfont
68 730 moveto
(Depth of Coverage) show


% Information at bottom page.
/Helvetica findfont
8 scalefont setfont
72 134 moveto
(Genome: /home/shared/8TB_HDD_01/sam/gitrepos/deep-dive/F-Pmea/data/Pocillopora_meandrina_HIv1.assembly.fa) show

/Helvetica findfont
8 scalefont setfont
72 124 moveto
(Alignments: /home/shared/8TB_HDD_01/sam/gitrepos/deep-dive/F-Pmea/output/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/ShortStack_out/merged_alignments.bam) show

/Helvetica findfont
8 scalefont setfont
72 114 moveto
(Location: Pocillopora_meandrina_HIv1___Sc0000002:3841944-3842042 minus) show

/Helvetica findfont
8 scalefont setfont
72 104 moveto
(Name: Cluster_918) show



% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUACAUCCUUCGCAGCCCCUCUUUCGGGUGUCACACAACGUCGUCAAGGAGCGUUGUGUAACUCCCUAAGGAAGGCUUGCAAAGGAGGGCAGAAAAC\
) } def
/len { sequence length } bind def

/coor [
[115.92841339 349.34475708]
[127.18453979 338.79470825]
[124.37382507 324.06039429]
[121.56310272 309.32611084]
[112.45210266 304.23175049]
[107.63683319 294.72088623]
[108.97841644 283.92169189]
[116.26542664 275.54312134]
[114.38542175 260.66140747]
[112.50542450 245.77967834]
[110.62542725 230.89796448]
[108.74542999 216.01623535]
[99.47399139 204.35906982]
[105.42066193 189.69796753]
[103.54065704 174.81625366]
[101.66065979 159.93453979]
[99.54714203 145.08418274]
[97.20063019 130.26885986]
[94.85411072 115.45352936]
[85.79049683 107.96125793]
[84.13358307 96.31918335]
[90.74703979 86.59573364]
[88.86704254 71.71401215]
[86.98703766 56.83229065]
[85.10704041 41.95057297]
[83.22704315 27.06885147]
[73.82113647 14.34723759]
[79.90227509 0.75058353]
[78.02227783 -14.13113689]
[76.14227295 -29.01285744]
[66.73636627 -41.73447037]
[72.81750488 -55.33112335]
[70.93750763 -70.21284485]
[61.53159714 -82.93445587]
[67.61273956 -96.53111267]
[65.73273468 -111.41283417]
[63.85274124 -126.29455566]
[61.97274017 -141.17626953]
[60.09274292 -156.05799866]
[58.21274567 -170.93971252]
[56.33274460 -185.82144165]
[54.45274734 -200.70315552]
[52.33922958 -215.55351257]
[49.99271011 -230.36883545]
[37.06106186 -239.45443726]
[34.42383194 -255.03712463]
[43.64563751 -267.87200928]
[59.25534821 -270.34432983]
[71.99200439 -260.98733521]
[74.29916382 -245.35237122]
[64.80803680 -232.71534729]
[67.15455627 -217.90002441]
[71.38597870 -211.67431641]
[69.33446503 -202.58316040]
[71.21446991 -187.70143127]
[73.09446716 -172.81971741]
[74.97446442 -157.93798828]
[76.85446167 -143.05627441]
[78.73445892 -128.17454529]
[80.61445618 -113.29283142]
[82.49446106 -98.41110992]
[91.76589966 -86.75393677]
[85.81922913 -72.09284210]
[87.69922638 -57.21112442]
[96.97066498 -45.55395126]
[91.02399445 -30.89285660]
[92.90399170 -16.01113510]
[94.78399658 -1.12941492]
[104.05543518 10.52775764]
[98.10876465 25.18885231]
[99.98876190 40.07057190]
[101.86875916 54.95229340]
[103.74875641 69.83401489]
[105.62876129 84.71573639]
[116.12528229 97.70503235]
[109.66943359 113.10700989]
[112.01595306 127.92233276]
[114.36247253 142.73765564]
[118.86887360 150.89549255]
[116.54238129 158.05453491]
[118.42237854 172.93624878]
[120.30238342 187.81797791]
[129.70828247 200.53958130]
[123.62715149 214.13624573]
[125.50714874 229.01795959]
[127.38714600 243.89968872]
[129.26715088 258.78140259]
[131.14714050 273.66311646]
[144.10745239 288.94451904]
[136.29740906 306.51538086]
[139.10813904 321.24969482]
[141.91885376 335.98400879]
[156.26826477 341.64950562]
[165.25817871 354.18685913]
[166.01995850 369.59539795]
[158.31053162 382.95834351]
[144.58992004 390.01159668]
[129.23635864 388.50451660]
[117.14907074 378.91799927]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 92]
[3 91]
[4 90]
[8 88]
[9 87]
[10 86]
[11 85]
[12 84]
[14 82]
[15 81]
[16 80]
[17 78]
[18 77]
[19 76]
[22 74]
[23 73]
[24 72]
[25 71]
[26 70]
[28 68]
[29 67]
[30 66]
[32 64]
[33 63]
[35 61]
[36 60]
[37 59]
[38 58]
[39 57]
[40 56]
[41 55]
[42 54]
[43 52]
[44 51]
] def

init

% From maple
/maplemark { % i r g b maplemark  draw filled circle around base i
  setrgbcolor
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc closepath fill stroke
} bind def
/show5 { % i mark 5-prime end at base i
  newpath 1 sub coor exch get aload pop moveto
  -5 0 rmoveto
  -15 10 rlineto
  -8 0 rmoveto (5') show stroke
} bind def
1 show5
28 1.00 0.56 0.00 maplemark
73 1.00 0.00 1.00 maplemark
21 1.00 0.83 0.00 maplemark
64 1.00 0.00 1.00 maplemark
27 1.00 0.56 0.00 maplemark
29 1.00 0.56 0.00 maplemark
63 1.00 0.00 1.00 maplemark
74 1.00 0.00 1.00 maplemark
76 1.00 0.00 1.00 maplemark
57 1.00 0.00 1.00 maplemark
59 1.00 0.00 1.00 maplemark
39 1.00 0.56 0.00 maplemark
72 1.00 0.00 1.00 maplemark
60 1.00 0.00 1.00 maplemark
37 1.00 0.56 0.00 maplemark
31 1.00 0.56 0.00 maplemark
75 1.00 0.00 1.00 maplemark
58 1.00 0.00 1.00 maplemark
38 1.00 0.56 0.00 maplemark
62 1.00 0.00 1.00 maplemark
70 1.00 0.00 1.00 maplemark
66 1.00 0.00 1.00 maplemark
80 0.00 0.48 1.00 maplemark
65 1.00 0.00 1.00 maplemark
41 1.00 0.59 0.00 maplemark
30 1.00 0.56 0.00 maplemark
69 1.00 0.00 1.00 maplemark
67 1.00 0.00 1.00 maplemark
24 1.00 0.56 0.00 maplemark
61 1.00 0.00 1.00 maplemark
42 1.00 0.68 0.00 maplemark
68 1.00 0.00 1.00 maplemark
52 0.00 0.00 1.00 maplemark
36 1.00 0.56 0.00 maplemark
56 1.00 0.00 1.00 maplemark
77 1.00 0.00 1.00 maplemark
79 0.23 1.00 0.77 maplemark
32 1.00 0.56 0.00 maplemark
71 1.00 0.00 1.00 maplemark
23 1.00 0.58 0.00 maplemark
55 0.59 1.00 0.41 maplemark
35 1.00 0.56 0.00 maplemark
78 1.00 0.33 0.00 maplemark
40 1.00 0.59 0.00 maplemark
43 1.00 0.89 0.00 maplemark
54 0.04 1.00 0.96 maplemark
34 1.00 0.56 0.00 maplemark
44 0.88 1.00 0.12 maplemark
53 0.00 0.00 1.00 maplemark
25 1.00 0.56 0.00 maplemark
33 1.00 0.56 0.00 maplemark
22 1.00 0.58 0.00 maplemark
26 1.00 0.56 0.00 maplemark

% switch off outline pairs or bases by removing these lines
% drawoutline
% drawpairs
drawbases
showpage
end
%%EOF
